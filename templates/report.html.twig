{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
<div class="index center">
<h1 id="kmom01">Kmom01</h1></a>
<p class="report">Jag känner till objektorientering från självstudier innan jag började på webbprogrammeringsutbildningen. Här under utbildningen så har jag och min kursare stött på objektorientering
    litet under JavaScript-kursen och mer under OOP-kursen. Vi gick inte in i djupet på vad det är. Det finns en del koncept som (mig veterligen) inte fungerar så bra i Python och som ändå finns i 
    språk som är baserade på OOP. Private/public/protected finns inte på samma sätt i Python. Arv är också mindre utförligt i Python än vad det är i exempelvis C#.
</p>
<p class="report">Mig veterligen så är PHP:s modell för klasser och objekt väldigt likt andra språkers modeller. Jag har inte djupdykt i de andra språken och inte heller i PHP under detta kmom. Men de typiska mönstrena finns här med:
    <ul class="ul-report">
        <li>Arv.</li>
        <li>Konstruktor/destruktor.</li>
        <li>Attribut.</li>
        <li>Objekt.</li>
        <li>Statiska variabler/konstanter.</li>
        <li>Protected/private/public metoder och attribut. Normalfallet är att dessa ska vara private.</li>
    </ul>
</p>

<p class="report">Min uppfattning om kodbasen/koden är att vi använder oss av MVC-designmönstret, med fokus på view och controller. Hittills finns det en del okända delar som jag inte är helt bekant med och
    det sker saker på ett magiskt sett. Det här med att samla routes i olika controllers är jag inte van med. Vi har även flera mappar som heter controllers (i assets och i src). Jag förstår inte heller
    hur encore fungerar än och jag är förvirrad över var bilderna ska placeras. Alla dessa saker skulle jag kunna ta mig tiden till att efterforska redan nu men min erfarenhet med tidigare kurser är 
    att man fattar det till slut ändå. Det är bra att ha frågorna i bakhuvudet i alla fall, då kommer man undermedvetet söka efter svaren. I övrigt så har vi arbetat med MVC-mönstret innan i flera kurser
     men kanske inte så djupt och medvetet som vi kommer arbeta med det nu.
</p>

<p class="report">De områden från <a href="https://phptherightway.com/">PHP The Right Way</a> jag först och främst hade velat lära mig mer om är Servers and Deployment samt Virtualization. Dessa områden är viktiga när man kan grunderna och vill
    skapa en webbapplikation. Jag hade gärna också velat lära mig mer om felhantering (Errors and Exceptions), det känns som att det alltid är bra att kunna detta när man skapar kod för andras skull. 
    Testing är ett område som vi kommer kolla på senare, det är också användbart. Design Patterns är ett intressant område, jag gillar när man pratar om koncept på ett generaliserat plan som går 
att använda på andra områden.</p>

<p class="report">Mina TIL för detta KMOM är:
    <ul class="ul-report">
        <li>Symfony är ett ramverk som Django/Flask/Express för att skapa webbapplikationer i PHP.</li>
        <li>Det går att lägga routes i flera olika filer. Symfony känner igen dessa.</li>
        <li>Även PHP kan skrivas objektorienterat.</li>
        <li>MVC-mönstret verkar vara det bästa mönstret för att samordna koden i en webbapplikation.</li>
        <li>Det är inte helt lätt att få Boostrap att fungera i Symfony 7.</li>
        <li>Har lärt mig mer om MD-filer och hur man skriver en README-fil till sin <a href="https://github.com/airhelios/mvc">Github-repo</a>.</li>
    </ul>

</p>
</div>

{% endblock %}